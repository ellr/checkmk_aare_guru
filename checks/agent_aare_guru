#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

"""
Argument-thingy: Builds argument list and acts as interpreter
of special characters in device password at WATO

This file is written for Check_MK.

Authors:    Roger Ellenberger <roger.ellenberger@wagner.ch>
"""


def get_proxy_params(proxy_param):
    """this function handles the proxy configuration passed from the WATO ValueSpec using a HTTPProxyReference.
    Due to different behaviour in CMK 2.0 and 2.1, we need logic to distinguish both.

    ### possible returned values for CMK 2.0:

           # what's configured in WATO                          # plain value that's passed                 # returned value by get_http_proxy()
        1. used_http_proxy_ref='Use from environment'           value=('environment', 'environment')        get_http_proxy=None
        2. used_http_proxy_ref='Connect without proxy'          value=('no_proxy', None)                    get_http_proxy=''
        3. used_http_proxy_ref='Use globally configured proxy'  value=('global', 'USER_DEFINED_PROXY_NAME') get_http_proxy='http://PROXYHOST:PORT'
        4. used_http_proxy_ref='Use explicit proxy settings'    value=('url', 'http://PROXYHOST:PORT')      get_http_proxy='http://PROXYHOST:PORT'

    In the 3rd option, the name of the proxy, not the URL / hostname is returned


    ### possible returned values for CMK 2.1:
           # what's configured in WATO                          # plain value that's passed                 # returned value by get_http_proxy()    # value of get_http_proxy().serialize()
        1. used_http_proxy_ref='Use from environment'           value=('environment', 'environment')        get_http_proxy=EnvironmentProxyConfig() serialized=FROM_ENVIRONMENT
        2. used_http_proxy_ref='Connect without proxy'          value=('no_proxy', None)                    get_http_proxy=NoProxyConfig()          serialized=NO_PROXY
        3. used_http_proxy_ref='Use globally configured proxy'  value=('global', 'USER_DEFINED_PROXY_NAME') get_http_proxy=ExplicitProxyConfig()    serialized='http://PROXYHOST:PORT'
        4. used_http_proxy_ref='Use explicit proxy settings'    value=('url', 'http://PROXYHOST:PORT')      get_http_proxy=ExplicitProxyConfig()    serialized='http://PROXYHOST:PORT'
    """

    proxy = get_http_proxy(proxy_param)  # noqa: F821

    if proxy is None or isinstance(proxy, str):  # CMK 2.0 case
        if proxy is None:
            proxy = 'FROM_ENVIRONMENT'
        elif proxy == '':
            proxy = 'NO_PROXY'
        # else -> no need to modify

    else:  # CMK 2.1 case -> either EnvironmentProxyConfig, NoProxyConfig, ExplicitProxyConfig (however cannot simply check for that because CMK 2.0 would not find these classes)
        proxy = proxy.serialize()

    return proxy


def agent_nc_storagegrid_arguments(params, hostname, ipaddress):
    """function to build command line arguments that will be used to
    invoke the special agent.

    example data (one example per available proxy configuration):
        ('bern', ('no_proxy', None))  # Connect without proxy
        ('interlaken', ('environment', 'environment'))  # Use from Environment
        ('thun', ('global', 'my_proxy'))  # Use globally configured proxy
        ('biel', ('url', 'http://10.0.0.254:8080'))  # Use explicit proxy settings
    """
    args = []

    # get authentication
    args += ['--city', params[0]]

    # get proxy settings
    args += ['--proxy', get_proxy_params(params[1])]

    return args


special_agent_info['aare_guru'] = agent_nc_storagegrid_arguments  # noqa: F821
